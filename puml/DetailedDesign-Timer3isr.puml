@startuml 
start
->Timer3 interrupt routine
  Used for commutation timming
Datas:
 - Timer2_X - Counter that increments every 32ms
 - Flag_32ms_Elapsed - Flag triggered when 32ms elapses in timer 2
 - Rcp_Timeout_Cntd - RC Pulse Timeout counter is set to 10 each time a rc pulse is processed in timer 1,
   after 320ms without receiving rc pulses in timer 1 it is set to 0
 - Flag_Rcp_Stop - It is set when rc pulse read in timer 1 is 0 or when Rcp_Timeout_Cntd is timed out (320ms)
 - Rcp_Stop_Cnt - Counts the number of 32ms cycles rc pulse is 0 (Flag_Rcp_Stop == 1).
   Needed to enter run mode during 320ms (value 10) and exit run mode during 100ms (value 3)
   
   
Disable all interrupts
 ;
:clr IE_EA;
->Disable Timer3 interrupts;
:EIE1 &= 0x7F;
->Clear Timer3 interrupt flag;
:TMR3CN0 &= 0x7F;
->Short delay to avoid re-loading regular delay;
:TMR3RLL = 0xFA;
:TMR3RLH = 0xFF;
->Flag that timer has wrapped;
:clr Flag_Timer3_Pending;
->Enable all interrupts;
:set IE_EA;
:reti;
stop
@enduml



