@startuml 
start
if (Flag_High_Rpm == 0) then
  ->yes -> Set pwm limit;
  :Temp1 = 0xFF;
  ->Exit if startup phase set;
  if (Flag_Startup_Phase == 0) then
    ->yes -> Check if low RPM power protection is enabled;
    :A = Low_Rpm_Pwr_Slope;
    ->Check Low_Rpm_Pwr_Slope > 0;
    if (A != 0) then
      ->yes -> Avoid divide by zero;
      :A = Comm_Period4x_H;
      if (A != 0) then
        ->yes -> Divide 255 by Comm_Period4x_H;
        :A = 255;
        if (Flag_Initial_Run_Phase == 1) then
          ->yes -> More protection for initial run phase;
          :A = 127;
        endif
        :B = Comm_Period4x_H;
        :A = A / B;
        ->Multiply by slope;
        :B = Low_Rpm_Pwr_Slope;
        :A = A * B;
        ->Now:
          BA = (255 / Comm_Period4x_H) * Low_Rpm_Pwr_Slope
          or
          BA = (127 / Comm_Period4x_H) * Low_Rpm_Pwr_Slope;
        :Temp1 = A;
        ->Put high part of the multiplication in A;
        :Exchange A  B;
        ->Now A = high multiplication result part and B = low one;
        if (A != 0) then
          ->yes -> multiplication result > 255;
          :Temp1 = 255;
        endif
        ->Pwm_Limit_Beg shall be the minimum;
        :CARRY_BIT = 0;
        :A = Temp1;
        :A = A - Pwm_Limit_Beg;
        ->check Temp1 < Pwm_Limit_Beg;
        if (CARRY_BIT == 1) then (yes)
          :Temp1 = Pwm_Limit_Beg;
        endif
      endif
    endif
  endif
  :Pwm_Limit_By_Rpm = Temp1;
else
  ->no -> If high rpm, limit pwm by rpm instead;
  :CARRY_BIT = 0;
  :A = Comm_Period4x_L;
  if (MCU_48MHZ == 1) then
    ->yes -> Limit Comm_Period4x to 160, which is ~510k erpm;
    :A = A - 0xA0;
  else
    ->no -> Limit Comm_Period4x to 228, which is ~358k erpm;
    :A = A - 0xA0;
  endif
  :A = Comm_Period4x_H;
  :A = A - (0 + CARRY_BIT);
  
  :A = Pwm_Limit_By_Rpm;
  ->Check Comm_Period4x_H::Comm_Period4x_L < limit above;
  if (CARRY_BIT == 1) then
    ->yes -> above rpm limit;
    :A = A - 1;
  else
    ->no -> below rpm limit;
    :A = A + 1;
  endif
  if (A != 0) then (yes)
    :Pwm_Limit_By_Rpm = A;
  endif
endif
:ret;
stop
@enduml

