@startuml 
start
->Play beep melody

Plays a beep melody from eeprom storage

A melody has 64 pairs of (item1, item2) - a total of 128 items.
the first 4 values of the 128 items are metadata
item2 - is the duration of each pulse of the musical note, lower the value, higher the pitch
item1 - if item2 is zero, it is the number of milliseconds of wait time, else it is the number of pulses of item2

Requirements: Interrupts must be disabled and FETs turned off;
:DPTR = &Eep_Pgm_Beep_Melody;
:A = 0;
:A = *(A + DPTR);
:A = ~A;
->If first byte is 255, skip startup melody (settings may be invalid);
if (A != 0) then (yes)
  :Temp5 = 62;
  :DPTR = &Eep_Pgm_Beep_Melody + 04h;  
  repeat
    ->Read current location at Eep_Pgm_Beep_Melody to Temp4 and increment DPTR.
    If the value is 0, no point trying to play this note;
    :A = 0;
    :A = *(A + DPTR);
    if (A == 0) then (yes)
      :ret;
      stop
    endif
    :DPTR = DPTR + 1;
    :Temp4 = A;
    ->Read current location at Eep_Pgm_Beep_Melody to Temp3.
    If the value zero, that means this is a silent note;
    :A = 0;
    :A = *(A + DPTR);
    :Temp3 = A;
    if (A != 0) then (yes)
      :beep();
    else (no)
      :A = Temp4;
      :Temp2 = A;
      :Temp3 = 0;
      :wait_ms();
    endif
    :DPTR = DPTR + 1;
    :Temp5 = Temp5 - 1;
  repeat while (Temp5 != 0) is (yes)
endif
:ret;
stop
@enduml
